<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>亿栖云文档 – 第三方数据集成</title>
    <link>/storage/object-storage/manual/third_party_integration/</link>
    <description>Recent content in 第三方数据集成 on 亿栖云文档</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 28 Feb 2020 10:08:56 +0900</lastBuildDate>
    
	  <atom:link href="/storage/object-storage/manual/third_party_integration/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Storage: Logstash Input QingStor</title>
      <link>/storage/object-storage/manual/third_party_integration/logstash_input/</link>
      <pubDate>Mon, 16 Aug 2021 10:08:56 +0900</pubDate>
      
      <guid>/storage/object-storage/manual/third_party_integration/logstash_input/</guid>
      <description>
        
        
        &lt;p&gt;Logstash Input QingStor 是 Logstash 的 一个 Input 插件，它用于对接亿栖云对象存储服务。用户通过该插件，可下载存储于亿栖云对象存储上的日志文件，并将其导入至 Logstash 中，方便用户进一步的处理分析。&lt;/p&gt;
&lt;p&gt;该插件已在 GitHub 开源，本文为简要使用文档。更多详细信息请参见 &lt;a href=&#34;https://github.com/yunify/logstash-input-qingstor&#34;&gt;GitHub 项目&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;自行下载安装 Logstash。可参考 &lt;a href=&#34;https://www.elastic.co/cn/downloads/past-releases#logstash&#34;&gt;Logstash&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;执行如下命令，安装插件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/usr/local/bin/logstash-plugin install logstash-input-qingstor
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在管理控制台申请 Access Key。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建配置文件 qs_input.conf，并填写如下内容：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-conf&#34; data-lang=&#34;conf&#34;&gt;input {
    qingstor {
        access_key_id =&amp;gt; &amp;#34;your_access_key_id&amp;#34;
        secret_access_key =&amp;gt; &amp;#34;your_secret_access_key&amp;#34;
        bucket =&amp;gt; &amp;#34;bucket_name&amp;#34;
        region =&amp;gt; &amp;#34;pek3a&amp;#34;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以上内容为 Logstash Input QingStor 的必须配置项。查看更多可用选项可访问 GitHub 项目页面进行查阅。&lt;/li&gt;
&lt;li&gt;由于可选项均有默认值，故填写必须配置项后，插件即可成功运行。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用&#34;&gt;使用&lt;/h2&gt;
&lt;p&gt;配置完成之后执行如下命令行启动 Logstash，即可读取亿栖云对象存储指定 Bucket 中的日志文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$./bin/logstash -f qs_input.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Storage: Logstash Output QingStor</title>
      <link>/storage/object-storage/manual/third_party_integration/logstash_output/</link>
      <pubDate>Mon, 16 Aug 2021 10:08:56 +0900</pubDate>
      
      <guid>/storage/object-storage/manual/third_party_integration/logstash_output/</guid>
      <description>
        
        
        &lt;p&gt;Logstash Output QingStor 是 Logstash 的一个 Output 插件，它用于对接亿栖云对象存储服务。用户通过该插件，将 Logstash 的输出结果归档至亿栖云对象存储的 Bucket 中。&lt;/p&gt;
&lt;p&gt;该插件已在 GitHub 开源，本文为简要使用文档。更多详细信息请参见 &lt;a href=&#34;https://github.com/yunify/logstash-output-qingstor&#34;&gt;GitHub 项目&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;自行下载安装 Logstash。可参考 &lt;a href=&#34;https://www.elastic.co/cn/downloads/past-releases#logstash&#34;&gt;Logstash&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;执行如下命令，安装插件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/usr/local/bin/logstash-plugin install logstash-output-qingstor
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在管理控制台申请 Access Key。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建配置文件 qs_output.conf，并填写如下内容：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-conf&#34; data-lang=&#34;conf&#34;&gt;output {
    qingstor {
        access_key_id =&amp;gt; &amp;#34;your_access_key_id&amp;#34;
        secret_access_key =&amp;gt; &amp;#34;your_secret_access_key&amp;#34;
        bucket =&amp;gt; &amp;#34;bucket_name&amp;#34;
        region =&amp;gt; &amp;#34;pek3a&amp;#34;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以上内容为 Logstash Output QingStor 的必须配置项。查看更多可用选项可访问 GitHub 项目页面进行查阅。&lt;/li&gt;
&lt;li&gt;由于可选项均有默认值，故填写必须配置项后，插件即可成功运行。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用&#34;&gt;使用&lt;/h2&gt;
&lt;p&gt;配置完成之后执行如下命令行启动 Logstash，即可在亿栖云对象存储指定的 Bucket 中查看到输出的日志文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$./bin/logstash -f qs_output.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Storage: WordPress QingStor </title>
      <link>/storage/object-storage/manual/third_party_integration/wordpress_plugin_for_qingstor/</link>
      <pubDate>Fri, 28 Feb 2020 10:08:56 +0900</pubDate>
      
      <guid>/storage/object-storage/manual/third_party_integration/wordpress_plugin_for_qingstor/</guid>
      <description>
        
        
        &lt;p&gt;wp-qingstor 是亿栖云对象存储服务的 WordPress 插件，用于定时备份，自动同步媒体库。&lt;/p&gt;
&lt;p&gt;该插件已在 GitHub 开源，本文为简要使用文档。更多详细信息请参见：&lt;a href=&#34;https://github.com/yunify/wp-qingstor&#34;&gt;GitHub 项目&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;在 WordPress 已正确安装的前提下，用户可通过如下三种方式安装该插件：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;在 WordPress 插件库中搜索 wp-qingstor 并下载安装。&lt;/li&gt;
&lt;li&gt;在 &lt;a href=&#34;https://github.com/yunify/wp-qingstor/releases&#34;&gt;GitHub Releases&lt;/a&gt; 中下载最新的 zip 格式的安装包，并使用 WordPress 自带的上传插件进行安装。&lt;/li&gt;
&lt;li&gt;在 &lt;a href=&#34;https://github.com/yunify/wp-qingstor/releases&#34;&gt;GitHub Releases&lt;/a&gt; 中下载最新的任意格式安装包，并将安装包解压后移动至 &lt;code&gt;/wp-content/plugins/&lt;/code&gt; 目录下。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;成功安装完插件后，须在插件库中找到并启用该插件。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;前期准备&#34;&gt;前期准备&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在管理控制台申请 Access Key。可参考&lt;a href=&#34;/storage/object-storage/api/practices/signature/#%E8%8E%B7%E5%8F%96-access-key&#34;&gt;获取 Access Key&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在亿栖云对象存储中，创建一个用于 WrodPress 的 Bucket。详细操作可参考 &lt;a href=&#34;/storage/object-storage/manual/console/bucket_manage/basic_opt/#%E5%88%9B%E5%BB%BA-bucket&#34;&gt;创建 Bucket&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;启用插件后，点击 &lt;strong&gt;设置 &amp;gt; QingStor&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 &lt;strong&gt;Bucket 设置&lt;/strong&gt; 页面中填写创建的 Access Key，Secret Key 和用于 WordPress 的 Bucket，填写完成后点击 &lt;strong&gt;保存设置&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;wordpress_set_bucket.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;在 &lt;strong&gt;上传设置&lt;/strong&gt; 页面中，设置 &lt;code&gt;文件类型&lt;/code&gt;，&lt;code&gt;指定前缀&lt;/code&gt;，&lt;code&gt;Bucket URL&lt;/code&gt; 以及是否开启 &lt;code&gt;自动替换资源文件 URL&lt;/code&gt;，填写完成后点击 &lt;strong&gt;保存设置&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;wordpress_set_upload.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;在 &lt;strong&gt;备份设置&lt;/strong&gt; 页面中，设置 &lt;code&gt;指定前缀（备份文件保持目录）&lt;/code&gt;，&lt;code&gt;定时备份&lt;/code&gt;，&lt;code&gt;保存备份文件的最大数量&lt;/code&gt; 以及是否开启 &lt;code&gt;邮件通知&lt;/code&gt;，填写完成后点击 &lt;strong&gt;保存设置&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;wordpress_set_backup.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;说明&#34;&gt;说明&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;上传设置中，开启自动替换资源文件 URL，插件会在文章渲染时自动替换资源文件的 URL 为 Bucket 地址。&lt;/li&gt;
&lt;li&gt;备份功能需安装 zip 和 mysqldump 程序。用户可分别在终端使用 &lt;code&gt;zip --version&lt;/code&gt; 和 &lt;code&gt;mysqldump --version&lt;/code&gt; 命令查看相应的版本号。定时备份的邮件通知依赖 PHP email 的相关设置。&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
